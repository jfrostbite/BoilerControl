#ifndef INDEX_HTML_H
#define INDEX_HTML_H

// HTML页面内容
static const char* HTML_PAGE = 
"<!DOCTYPE html>"
"<html><head><meta charset='utf-8'>"
"<title>壁挂炉控制</title>"
"<meta name='viewport' content='width=device-width, initial-scale=1'>"
"<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>"
"<script src='https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js'></script>"
"<script src='https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@1.0.1/dist/chartjs-adapter-moment.min.js'></script>"
"<style>"
"body {"
"    margin: 0;"
"    padding: 20px;"
"    font-family: Arial, sans-serif;"
"    background: #f0f2f5;"
"    min-height: 100vh;"
"}"
".container {"
"    max-width: 800px;"
"    margin: 0 auto;"
"}"
".card {"
"    background: #fff;"
"    padding: 24px;"
"    margin: 16px 0;"
"    border-radius: 12px;"
"    box-shadow: 0 2px 8px rgba(0,0,0,0.1);"
"}"
".chart-container {"
"    position: relative;"
"    height: 300px;"
"    margin: 20px 0;"
"}"
".card h2 {"
"    margin: 0 0 20px 0;"
"    color: #1a1a1a;"
"    font-size: 1.5em;"
"}"
".status {"
"    display: grid;"
"    grid-template-columns: repeat(3, 1fr);"
"    gap: 16px;"
"    text-align: center;"
"    margin-bottom: 16px;"
"}"
".status-item {"
"    padding: 16px;"
"    background: #f8f9fa;"
"    border-radius: 8px;"
"    font-size: 1.2em;"
"}"
".status-label {"
"    color: #666;"
"    font-size: 0.9em;"
"    margin-bottom: 8px;"
"}"
".status-value {"
"    color: #1a1a1a;"
"    font-weight: bold;"
"}"
".control {"
"    display: flex;"
"    align-items: center;"
"    justify-content: space-between;"
"    margin: 16px 0;"
"    padding: 16px;"
"    background: #f8f9fa;"
"    border-radius: 8px;"
"}"
".control-label {"
"    font-size: 1.1em;"
"    color: #1a1a1a;"
"}"
".control-input {"
"    display: flex;"
"    align-items: center;"
"    gap: 12px;"
"}"
"input {"
"    width: 100px;"
"    padding: 8px 12px;"
"    border: 1px solid #ddd;"
"    border-radius: 6px;"
"    font-size: 1em;"
"    text-align: center;"
"}"
"button {"
"    padding: 8px 20px;"
"    border: none;"
"    border-radius: 6px;"
"    background: #0066ff;"
"    color: white;"
"    font-size: 1em;"
"    cursor: pointer;"
"    transition: all 0.2s;"
"    position: relative;"
"}"
"button:hover {"
"    background: #0052cc;"
"}"
"button:disabled {"
"    background: #ccc;"
"    cursor: not-allowed;"
"}"
"button.loading {"
"    padding-right: 40px;"
"}"
"button.loading:after {"
"    content: '';"
"    position: absolute;"
"    right: 10px;"
"    top: 50%;"
"    width: 20px;"
"    height: 20px;"
"    margin-top: -10px;"
"    border: 2px solid #fff;"
"    border-top-color: transparent;"
"    border-radius: 50%;"
"    animation: spin 1s linear infinite;"
"}"
"@keyframes spin {"
"    to { transform: rotate(360deg); }"
"}"
".toast {"
"    position: fixed;"
"    bottom: 20px;"
"    left: 50%;"
"    transform: translateX(-50%);"
"    background: rgba(0,0,0,0.8);"
"    color: white;"
"    padding: 12px 24px;"
"    border-radius: 6px;"
"    font-size: 1em;"
"    opacity: 0;"
"    transition: opacity 0.3s;"
"    pointer-events: none;"
"}"
".toast.show {"
"    opacity: 1;"
"}"
".heater-on {"
"    color: #ff4d4f;"
"}"
".heater-off {"
"    color: #52c41a;"
"}"
".logs {"
"    background: #f8f9fa;"
"    border-radius: 8px;"
"    padding: 16px;"
"    max-height: 400px;"
"    overflow-y: auto;"
"    font-family: monospace;"
"    font-size: 0.9em;"
"    line-height: 1.5;"
"}"
".log-entry {"
"    padding: 4px 0;"
"    border-bottom: 1px solid #eee;"
"}"
".log-time {"
"    color: #666;"
"    margin-right: 8px;"
"}"
"</style></head>"
"<body>"
"<div class='container'>"
"    <div class='card'>"
"        <h2>系统状态</h2>"
"        <div class='status'>"
"            <div class='status-item'>"
"                <div class='status-label'>当前温度</div>"
"                <div class='status-value' id='current-temp'>--</div>"
"            </div>"
"            <div class='status-item'>"
"                <div class='status-label'>当前湿度</div>"
"                <div class='status-value' id='current-humidity'>--</div>"
"            </div>"
"            <div class='status-item'>"
"                <div class='status-label'>加热状态</div>"
"                <div class='status-value' id='heater-status'>--</div>"
"            </div>"
"            <div class='status-item'>"
"                <div class='status-label'>平均温度</div>"
"                <div class='status-value' id='avg-temp'>--</div>"
"            </div>"
"            <div class='status-item'>"
"                <div class='status-label'>采暖时间</div>"
"                <div class='status-value' id='heating-time'>--</div>"
"            </div>"
"            <div class='status-item'>"
"                <div class='status-label'>目标温度</div>"
"                <div class='status-value' id='target-temp'>--</div>"
"            </div>"
"        </div>"
"    </div>"
"    <div class='card'>"
"        <h2>温度控制</h2>"
"        <div class='control'>"
"            <div class='control-label'>白天温度 (6:00-22:00)</div>"
"            <div class='control-input'>"
"                <input type='number' id='day_target' step='0.1' min='5' max='30'>"
"                <span>°C</span>"
"                <button onclick='setDayTarget()'>设置</button>"
"            </div>"
"        </div>"
"        <div class='control'>"
"            <div class='control-label'>夜间温度 (22:00-6:00)</div>"
"            <div class='control-input'>"
"                <input type='number' id='night_target' step='0.1' min='5' max='30'>"
"                <span>°C</span>"
"                <button onclick='setNightTarget()'>设置</button>"
"            </div>"
"        </div>"
"        <div class='control'>"
"            <div class='control-label'>温度滞后</div>"
"            <div class='control-input'>"
"                <input type='number' id='hysteresis' step='0.1' min='0.1' max='2.0'>"
"                <span>°C</span>"
"                <button onclick='setHysteresis()'>设置</button>"
"            </div>"
"        </div>"
"    </div>"
"    <div class='card'>"
"        <h2>温度曲线</h2>"
"        <div class='control'>"
"            <div class='control-label'>选择日期</div>"
"            <div class='control-input'>"
"                <input type='date' id='date_select' onchange='loadDateData()'>"
"                <button onclick='loadTodayData()'>今天</button>"
"            </div>"
"        </div>"
"        <div class='chart-container'>"
"            <canvas id='tempChart'></canvas>"
"        </div>"
"    </div>"
"    <div class='card'>"
"        <h2>系统日志</h2>"
"        <div class='logs' id='logs'></div>"
"    </div>"
"</div>"
"<div id='toast' class='toast'></div>"
"<script>"
"var tempData = {"
"    labels: [],"
"    datasets: [{"
"        label: '温度 (°C)',"
"        data: [],"
"        borderColor: 'rgb(75, 192, 192)',"
"        backgroundColor: 'rgba(75, 192, 192, 0.1)',"
"        fill: true,"
"        tension: 0.4,"
"        yAxisID: 'y',"
"        pointRadius: 0,"
"        borderWidth: 2"
"    }, {"
"        label: '加热状态',"
"        data: [],"
"        borderColor: 'rgb(255, 99, 132)',"
"        backgroundColor: 'rgba(255, 99, 132, 0.1)',"
"        fill: true,"
"        stepped: true,"
"        yAxisID: 'y1',"
"        pointRadius: 0,"
"        borderWidth: 2"
"    }]"
"};"
""
"var tempConfig = {"
"    type: 'line',"
"    data: tempData,"
"    options: {"
"        responsive: true,"
"        maintainAspectRatio: false,"
"        interaction: {"
"            mode: 'nearest',"
"            axis: 'x',"
"            intersect: false"
"        },"
"        elements: {"
"            point: {"
"                radius: 0,"
"                hitRadius: 10,"
"                hoverRadius: 5"
"            },"
"            line: {"
"                tension: 0.4"
"            }"
"        },"
"        plugins: {"
"            legend: {"
"                position: 'top',"
"                labels: {"
"                    usePointStyle: true,"
"                    padding: 20"
"                }"
"            },"
"            decimation: {"
"                enabled: true,"
"                algorithm: 'min-max'"
"            }"
"        },"
"        scales: {"
"            x: {"
"                type: 'time',"
"                time: {"
"                    unit: 'minute',"
"                    displayFormats: {"
"                        minute: 'HH:mm'"
"                    }"
"                },"
"                grid: {"
"                    display: false"
"                },"
"                title: {"
"                    display: true,"
"                    text: '时间'"
"                }"
"            },"
"            y: {"
"                type: 'linear',"
"                display: true,"
"                position: 'left',"
"                title: {"
"                    display: true,"
"                    text: '温度 (°C)'"
"                }"
"            },"
"            y1: {"
"                type: 'linear',"
"                display: true,"
"                position: 'right',"
"                min: -0.1,"
"                max: 1.1,"
"                grid: {"
"                    drawOnChartArea: false"
"                },"
"                title: {"
"                    display: true,"
"                    text: '加热状态'"
"                },"
"                ticks: {"
"                    callback: function(value) {"
"                        return value > 0.5 ? '开启' : '关闭';"
"                    }"
"                }"
"            }"
"        }"
"    }"
"};"
""
"var ctx = document.getElementById('tempChart').getContext('2d');"
"var tempChart = new Chart(ctx, tempConfig);"
""
"function updateChart(temp, heaterState) {"
"    var now = new Date();"
"    tempData.labels.push(now);"
"    tempData.datasets[0].data.push(temp);"
"    tempData.datasets[1].data.push(heaterState ? 1 : 0);"
"    tempChart.update();"
"}"
""
"function updateStatus() {"
"    fetch('/api/status').then(r=>r.json()).then(data=>{"
"        document.getElementById('current-temp').textContent = `${data.current_temp.toFixed(1)}°C`;"
"        document.getElementById('current-humidity').textContent = `${data.current_humidity.toFixed(1)}%`;"
"        document.getElementById('heater-status').textContent = data.heater_state ? '开启' : '关闭';"
"        document.getElementById('heater-status').className = "
"            'status-value ' + (data.heater_state ? 'heater-on' : 'heater-off');"
"        const now = new Date();"
"        const hour = now.getHours();"
"        const isDay = hour >= 6 && hour < 22;"
"        const targetTemp = isDay ? data.day_temp_target : data.night_temp_target;"
"        document.getElementById('target-temp').textContent = `${targetTemp.toFixed(1)}°C`;"
"        "
"        const today = new Date().toISOString().split('T')[0];"
"        const currentDate = document.getElementById('date_select').value;"
"        if (currentDate === today) {"
"            updateChart(data.current_temp, data.heater_state);"
"        }"
"    }).catch(err => console.error('更新状态失败:', err));"
"}"
"function loadSettings() {"
"    fetch('/api/status').then(r=>r.json()).then(data=>{"
"        document.getElementById('day_target').value = data.day_temp_target.toFixed(1);"
"        document.getElementById('night_target').value = data.night_temp_target.toFixed(1);"
"        document.getElementById('hysteresis').value = data.hysteresis.toFixed(1);"
"    }).catch(err => console.error('加载设置失败:', err));"
"}"
"function showToast(message, duration = 2000) {"
"    const toast = document.getElementById('toast');"
"    toast.textContent = message;"
"    toast.classList.add('show');"
"    setTimeout(() => toast.classList.remove('show'), duration);"
"}"
"function setButtonLoading(btn, loading) {"
"    btn.disabled = loading;"
"    if (loading) {"
"        btn.classList.add('loading');"
"    } else {"
"        btn.classList.remove('loading');"
"    }"
"}"
"function setDayTarget() {"
"    const btn = event.target;"
"    const temp = document.getElementById('day_target').value;"
"    setButtonLoading(btn, true);"
"    fetch('/api/settings', {"
"        method: 'POST',"
"        headers: {'Content-Type': 'application/json'},"
"        body: JSON.stringify({day_temp_target: parseFloat(temp)})"
"    }).then(r => r.json())"
"      .then(data => {"
"        if(data.status === 'success') {"
"            document.getElementById('day_target').value = data.day_temp_target.toFixed(1);"
"            showToast('白天温度已更新');"
"        }"
"    }).catch(err => {"
"        console.error('设置白天温度失败:', err);"
"        showToast('设置失败，请重试');"
"    }).finally(() => {"
"        setButtonLoading(btn, false);"
"    });"
"}"
"function setNightTarget() {"
"    const btn = event.target;"
"    const temp = document.getElementById('night_target').value;"
"    setButtonLoading(btn, true);"
"    fetch('/api/settings', {"
"        method: 'POST',"
"        headers: {'Content-Type': 'application/json'},"
"        body: JSON.stringify({night_temp_target: parseFloat(temp)})"
"    }).then(r => r.json())"
"      .then(data => {"
"        if(data.status === 'success') {"
"            document.getElementById('night_target').value = data.night_temp_target.toFixed(1);"
"            showToast('夜间温度已更新');"
"        }"
"    }).catch(err => {"
"        console.error('设置夜间温度失败:', err);"
"        showToast('设置失败，请重试');"
"    }).finally(() => {"
"        setButtonLoading(btn, false);"
"    });"
"}"
"function setHysteresis() {"
"    const btn = event.target;"
"    const hyst = document.getElementById('hysteresis').value;"
"    setButtonLoading(btn, true);"
"    fetch('/api/settings', {"
"        method: 'POST',"
"        headers: {'Content-Type': 'application/json'},"
"        body: JSON.stringify({hysteresis: parseFloat(hyst)})"
"    }).then(r => r.json())"
"      .then(data => {"
"        if(data.status === 'success') {"
"            document.getElementById('hysteresis').value = data.hysteresis.toFixed(1);"
"            showToast('温度滞后已更新');"
"        }"
"    }).catch(err => {"
"        console.error('设置温度滞后失败:', err);"
"        showToast('设置失败，请重试');"
"    }).finally(() => {"
"        setButtonLoading(btn, false);"
"    });"
"}"
"function updateLogs() {"
"    fetch('/api/logs').then(r=>r.json()).then(logs=>{"
"        const logsHtml = logs.map(log => `"
"            <div class='log-entry'>"
"                <span class='log-time'>${log.time}</span>"
"                <span class='log-msg'>${log.msg}</span>"
"            </div>"
"        `).join('');"
"        document.getElementById('logs').innerHTML = logsHtml;"
"    }).catch(err => console.error('更新日志失败:', err));"
"}"
"let autoRefreshInterval = null;"
"function loadTodayData() {"
"    const now = new Date();"
"    const today = now.getFullYear() + '-' +"
"        String(now.getMonth() + 1).padStart(2, '0') + '-' +"
"        String(now.getDate()).padStart(2, '0');"
"    document.getElementById('date_select').value = today;"
"    loadDateData();"
"    if (!autoRefreshInterval) {"
"        autoRefreshInterval = setInterval(() => {"
"            const currentDate = document.getElementById('date_select').value;"
"            if (currentDate === today) {"
"                loadDateData();"
"            } else {"
"                clearInterval(autoRefreshInterval);"
"                autoRefreshInterval = null;"
"            }"
"        }, 30000);"
"    }"
"}"
"function updateStats(data) {"
"    const stats = calculateStats(data);"
"    document.getElementById('avg-temp').textContent = stats.avgTemp.toFixed(1) + '°C';"
"    document.getElementById('heating-time').textContent = formatDuration(stats.heatingMinutes);"
"}"
""
"function calculateStats(data) {"
"    if (!data || !data.data || data.data.length === 0) {"
"        return { avgTemp: 0, heatingMinutes: 0 };"
"    }"
"    "
"    let tempSum = 0;"
"    let heatingMinutes = 0;"
"    let lastTime = null;"
"    "
"    data.data.forEach((point, index) => {"
"        tempSum += point.temp;"
"        "
"        if (point.heater) {"
"            const currentTime = new Date(point.time);"
"            if (lastTime && (currentTime - lastTime) <= 300000) {"
"                heatingMinutes += (currentTime - lastTime) / 60000;"
"            }"
"            lastTime = currentTime;"
"        } else {"
"            lastTime = null;"
"        }"
"    });"
"    "
"    return {"
"        avgTemp: tempSum / data.data.length,"
"        heatingMinutes: Math.round(heatingMinutes)"
"    };"
"}"
""
"function formatDuration(minutes) {"
"    const hours = Math.floor(minutes / 60);"
"    const mins = minutes % 60;"
"    return `${hours}小时${mins}分钟`;"
"}"
"function loadDateData() {"
"    const dateInput = document.getElementById('date_select');"
"    const selectedDate = dateInput.value;"
"    const today = new Date().toISOString().split('T')[0];"
"    "
"    if (!selectedDate) {"
"        showToast('请选择日期');"
"        return;"
"    }"
"    "
"    if (selectedDate !== today && autoRefreshInterval) {"
"        clearInterval(autoRefreshInterval);"
"        autoRefreshInterval = null;"
"    }"
"    "
"    fetch('/api/temp_data?date=' + selectedDate).then(r=>r.json()).then(data=>{"
"        if (data.data && data.data.length > 0) {"
"            tempData.labels = [];"
"            tempData.datasets[0].data = [];"
"            tempData.datasets[1].data = [];"
"            "
"            data.data.forEach(point => {"
"                const time = new Date(point.time + ' UTC+8');"
"                tempData.labels.push(time);"
"                tempData.datasets[0].data.push(point.temp);"
"                tempData.datasets[1].data.push(point.heater ? 1 : 0);"
"            });"
"            "
"            tempChart.update();"
"            updateStats(data);"
"            showToast('加载完成');"
"        } else {"
"            showToast('该日期没有数据');"
"        }"
"    }).catch(err => {"
"        console.error('加载温度数据失败:', err);"
"        showToast('加载失败');"
"    });"
"}"
"document.addEventListener('DOMContentLoaded', function() {"
"    const now = new Date();"
"    const today = now.getFullYear() + '-' +"
"        String(now.getMonth() + 1).padStart(2, '0') + '-' +"
"        String(now.getDate()).padStart(2, '0');"
"    document.getElementById('date_select').value = today;"
"});"
"loadSettings();"
"loadTodayData();"
"setInterval(updateStatus, 5000);"
"updateStatus();"
"setInterval(updateLogs, 5000);"
"updateLogs();"
"</script>"
"</body></html>";

#endif 